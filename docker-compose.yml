services:
  minio:
    image: minio/minio:latest
    container_name: snaphub-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-password123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
      - ./scripts/create-bucket.sh:/create-bucket.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - snaphub-network

  minio-setup:
    image: minio/mc:latest
    container_name: snaphub-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-password123}
    entrypoint: |
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...'
      until mc alias set myminio http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD; do
        echo 'MinIO not ready, waiting...'
        sleep 2
      done
      echo 'MinIO is ready, creating bucket...'
      mc mb myminio/snaphub-test --ignore-existing
      echo 'Bucket created successfully'
      "
    networks:
      - snaphub-network

  server:
    build: 
      context: .
      dockerfile: Dockerfile
      target: server
    container_name: snaphub-server
    depends_on:
      minio-setup:
        condition: service_completed_successfully
    environment:
      - NODE_ENV=development
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-admin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-password123}
      - MINIO_BUCKET=snaphub-test
    ports:
      - "3000:3000"
    networks:
      - snaphub-network

  client:
    build: 
      context: .
      dockerfile: Dockerfile
      target: client
    container_name: snaphub-client
    ports:
      - "8080:8080"
    networks:
      - snaphub-network
    
  postgres:
    image: postgres
    restart: always
    shm_size: 128mb
    ports:
      - "5432:5432"
    networks:
      - snaphub-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

    environment:
      POSTGRES_USER: snaphub
      POSTGRES_DB: snaphub
      POSTGRES_PASSWORD: snaphub

volumes:
  minio_data:
  postgres_data:

networks:
  snaphub-network:
    driver: bridge